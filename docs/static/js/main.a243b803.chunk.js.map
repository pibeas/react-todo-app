{"version":3,"sources":["components/todos/todoReducer.js","components/todos/TodoListItem.js","components/todos/TodoList.js","components/todos/TodoAdd.js","hooks/useForm.js","components/todos/TodoApp.js","index.js"],"names":["todoReducer","state","action","type","payload","filter","todo","id","map","done","TodoListItem","index","handleDelete","handleToggle","className","onClick","desc","TodoList","todos","i","TodoAdd","handleAddTodo","initialState","useState","values","setValues","target","name","value","useForm","description","handleInputChange","reset","onSubmit","e","preventDefault","trim","length","newTodo","Date","getTime","placeholder","autoComplete","onChange","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a243b803.chunk.js","sourcesContent":["export const todoReducer = (state = [], action) => {\r\n    switch (action?.type) {\r\n        case 'add':\r\n            return [...state, action.payload];\r\n        case 'delete':\r\n            return state.filter(todo =>  todo.id !== action.payload);\r\n        // case 'toggle':\r\n        //     return state.map(todo => { \r\n        //         if (todo.id === action.payload) {\r\n        //             return {...todo, done: !todo.done};\r\n        //         }else{\r\n        //             return todo;\r\n        //         }\r\n        //     })\r\n        case 'toggle':\r\n            return state.map(todo =>\r\n                todo.id === action.payload ? {...todo, done: !todo.done} : todo  \r\n            );\r\n        default:\r\n            return state;\r\n            \r\n    }\r\n\r\n}","import React from 'react'\r\n\r\nexport const TodoListItem = ({todo, index, handleDelete, handleToggle}) => {\r\n    return (\r\n        <li\r\n            key={todo.id}\r\n            className=\"list-group-item\">\r\n                <p \r\n                    className={`${todo.done && 'complete'}`}\r\n                    onClick= {() => {handleToggle(todo.id)}}\r\n                >\r\n                    {index+1}. {todo.desc}\r\n                </p>\r\n                <button \r\n                    className=\"btn btn-danger\" \r\n                    onClick={() => handleDelete(todo.id)}\r\n                >Borrar</button>\r\n        </li>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TodoListItem } from './TodoListItem';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst TodoList = ({todos, handleToggle, handleDelete}) => {\r\n    return (\r\n        <ul className=\"list-group list-group-flush\">\r\n        {\r\n            todos.map((todo, i) => (\r\n                <TodoListItem key={i} todo={todo} index={i} handleDelete={handleDelete} handleToggle={handleToggle} />\r\n            ))     \r\n        }\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\n\r\nTodoList.propTypes = {\r\n    todos: PropTypes.array.isRequired,\r\n    handleToggle: PropTypes.func.isRequired,\r\n    handleDelete: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoList\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const TodoAdd = ({handleAddTodo}) => {\r\n\r\n    const [{description}, handleInputChange, reset] = useForm({\r\n        description: ''\r\n    })\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (description.trim().length <= 1) {\r\n            return;\r\n        }\r\n\r\n        const newTodo = {\r\n            id: new Date().getTime(),\r\n            desc: description,\r\n            done: false\r\n        }\r\n\r\n        handleAddTodo(newTodo);\r\n        reset();\r\n    }\r\n\r\n    return (\r\n        <>\r\n             <h4>Agregar TODO</h4>\r\n                    <hr />\r\n\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input \r\n                            type=\"text\"\r\n                            name=\"description\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Aprender...\"\r\n                            autoComplete=\"off\"\r\n                            value={description}\r\n                            onChange= {handleInputChange}\r\n                        />\r\n\r\n                        <button \r\n                            className=\"btn btn-outline-primary mt-1 btn-block\"\r\n                            type=\"submit\">\r\n                                Agregar\r\n                        </button>\r\n                    </form>\r\n                   \r\n        </>\r\n    )\r\n}\r\n","import {useState} from 'react'\r\n\r\nexport const useForm = (initialState = {}) => {\r\n   \r\n    const [values, setValues]  = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState)\r\n    }\r\n\r\n    const handleInputChange =({target}) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        })\r\n\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n}\r\n","import React, { useEffect, useReducer } from 'react'\r\nimport { todoReducer } from './todoReducer';\r\nimport './styles.css';\r\nimport TodoList from './TodoList';\r\nimport { TodoAdd } from './TodoAdd';\r\n\r\nconst init = () => {\r\n    return JSON.parse(localStorage.getItem('todos')) || []; \r\n};\r\n\r\n\r\nexport const TodoApp = () => {\r\n\r\n    const [todos, dispatch] = useReducer(todoReducer, [], init);\r\n  \r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify(todos));\r\n    }, [todos]);\r\n\r\n    const handleAddTodo = (newTodo) => {\r\n        dispatch({ \r\n            type: 'add',\r\n            payload: newTodo\r\n        }); //Esto manda la acciÃ³n al reducer.\r\n    }\r\n\r\n    const handleDelete = (todoId) => {\r\n\r\n        const action = {\r\n            type: 'delete',\r\n            payload: todoId\r\n        }\r\n\r\n        dispatch(action);\r\n    };\r\n\r\n    const handleToggle = (todoId) => {\r\n        dispatch({\r\n            type: 'toggle',\r\n            payload: todoId\r\n        })\r\n    };\r\n\r\n \r\n   \r\n\r\n    return (\r\n        <div>\r\n            <h1>TodoApp <small>({todos.length})</small></h1>\r\n            <hr />\r\n            <div className=\"row\">\r\n                <div className=\"col-7\">\r\n                   <TodoList todos={todos} handleToggle={handleToggle} handleDelete={handleDelete} />\r\n                </div>\r\n                <div className=\"col-5\">\r\n                   <TodoAdd handleAddTodo={handleAddTodo} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { TodoApp } from './components/todos/TodoApp';\n\nReactDOM.render(\n    <TodoApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}